nextflow_process {

    name "Test Process PANPHLAN_PROFILING"
    script "/workspace/modules_humann_test/modules/local/PanPhlAn3/panphlan_profiling/main.nf"
    process "PANPHLAN_PROFILING"
    config "./nextflow.config"

            setup {
                run("PANPHLAN_DOWNLOADPANGENOME") {
                    // script "modules/nf-core/panphlan/downloadpangenome/main.nf"
                    script "/workspace/modules_humann_test/modules/local/PanPhlAn3/downloadpangenome/main.nf"
                    process {
                        """
                        input[0] = "Eubacterium_rectale"
                        """
                    }
                }

                run("PANPHLAN_MAP") {
                    //script "modules/nf-core/panphlan/map/main.nf"
                    script "/workspace/modules_humann_test/modules/local/PanPhlAn3/panphlan_map/main.nf"
                    process {
                        """
                        input[0] = PANPHLAN_DOWNLOADPANGENOME.out.pangenome
                        input[1] = PANPHLAN_DOWNLOADPANGENOME.out.indexes

                        input[2] = Channel.of (
                            [
                            [id:"test1", single_end:false ],
                                    file("/workspace/modules_humann_test/panphlan_tutorial/samples_fastq/CCMD34381688ST-21-0.fastq")
                            ]
                        )
                        input[3] = "Eubacterium_rectale"
                        """
                    }
                }
            }
    test("Should run without failures") {
        when {
            process {
                """
                input[0] = PANPHLAN_MAP.out.mapping_dir
                input[1] = PANPHLAN_DOWNLOADPANGENOME.out.pangenome
                input[2] = "Eubacterium_rectale"

                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

}